/**
 * 
 * @authors Your Name (you@example.org)
 * @date    2015-08-19 19:38:47
 * @version $Id$
 */
// var totaldata=1;
var newzService=angular.module("newzService",["ngResource"]);

newzService.factory("Http",function($http,$location,$timeout){
	var promise=$http({
		method:"GET",
		url:"http://airnz.clients.inzen.com.cn/airnzapi/airnzcampaign"
	});

	// return {
	// 	promise:promise
	// }

	var sj=[];
	var hardsj=[];

	var url=$location.protocol()+"://"+$location.host()+":"+$location.port()+"/html";
	// alert(url);
	var hard=[
		url+"/file/logo-04.png",
		url+"/file/font-03.png",
		url+"/file/11-01.png",
		url+"/file/circle.png",
		url+"/file/main.jpg",
		url+"/file/skycouch.png",
		url+"/file/hy.png",
		url+"/file/down.png",
		url+"/file/change.png",
		url+"/file/share.png",
		url+"/file/wht2.jpg",
		url+"/file/wht3.jpg",
		url+"/file/wht9.jpg",
		url+"/file/hl.png"
		];

	var i=0;

	function getFont(i,data){
		WebFont.load({
			custom:{
				families:["NZ"]
			},
			fontactive:function(){
				// alert("font done");
				hImg(i,data);
			},
			fontinactive:function(){
				// alert("font done");
				hImg(i,data);
			}
		})
	}

	// $location.url("/wht");
	function tz(){
		// console.log($location);
		// alert($location);
		// alert("kk");
		// $location.path("/wht");
		$timeout(function(){
			$location.path("/wht");
		})
		// $location.url("/wht");

		// window.location.href="#/wht";
		// alert("kk");
	}

	// setTimeout(function(){
	// 	alert("kk");
	// 	tz();
	// },2000);
	// tz();

	function hImg(i,data){
		// alert("himg");
		var obj={};

		var arr=[];

		var img1=new Image();
		img1.onload=function(){
			img1.className="wa";
			arr.push(img1);
			var img2=new Image();
			img2.onload=function(){
				img2.className="cback";
				img2.id="bbk";
				arr.push(img2);
				deal(arr,data[i]);
				console.log(arr);
				i=i+1;
				if(i<data.length){
					hImg(i,data);
				}
				else{
					console.log(sj);
					totalhard=hardsj;
					totald=sj;
					// alert("done");
					// $state.go("/wht");
					// console.log($location.path());
					// $location.path("/wht");
					tz();
					// var url=$location.absUrl();
					// window.location.href="#/wht";
				}
			}
			img2.src=data[i].backgroud;
		}
		img1.src=data[i].copy;
	}

	function deal(arr,data){
		var obj={};
		obj.back=arr[1];
		obj.wa=arr[0];
		obj.text=data.description;
		obj.hl=data.charge;
		sj.push(obj);
	}
	var j=0;


	function getImage2(data){
		console.log(data);
		var img=new Image();
		var i=0;
		img.onload=function(){
			hardsj.push(img);
			j=j+1;
			console.log(hardsj);
			if(j<hard.length){
				getImage2(data);
			}
			else{
				// alert("img done");
		//		getFont(i,data);
			}
		}
		img.src=hard[j];
	}


	promise.success(function(data){
		console.log(data);
		getImage2(data);
		// console.log(data)
	});

	return{
		name:"ll"
	}


	
})

newzService.factory("View",function(){
	var use=navigator.userAgent,
		width,
		height,
		bl;

		// alert(use);
	if(use.indexOf("iPhone")!=-1){
		var view=document.getElementById("view");
			view.content="minimum-scale=0.5,initial-scale=0.5,maximum-scale=0.5,user-scalable=no";
			width=document.documentElement.clientWidth;
			height=document.documentElement.clientHeight;

			if(width==640||width==1136){
				$("html").css("fontSize","34.782px");
				bl=1.2;
			}
			else if(width==750||width==1334){
				$("html").css("fontSize","40.76px");
				bl=1.4;
			}
			else if(width==828||width==1472){
				$("html").css("fontSize","45px");
				bl=1.55;
			}
		}

		else{
			// alert("an");
			var view=document.getElementById("view");
			view.content="width=device-width,minimum-scale=1.0,initial-scale=1.0,maximum-scale=1,user-scalable=no";
			width=document.documentElement.clientWidth;
			height=document.documentElement.clientHeight;

			var nb=width/818,
			    nrem=nb*45;
			bl=1.55*nb;
			$("html").css("fontSize",nrem+"px");


			// alert(document.body.clientHeight);
			// if(width==360||width==598||width==640){
			// 	$("html").css("fontSize","19.565px");
			// 	bl=0.675;
			// }
			// else if(width==412||width==732){
			// 	$("html").css("fontSize","22.391px");
			// 	bl=0.7725;
			// }
			// else if(width==320){
			// 	$("html").css("fontSize","17.391px");
			// }

		}

		var rem=parseInt($("html").css("fontSize"));
		var radio2=5.2666*rem;
		var Kaleidoscope;



		(function () {
		    var DragDrop,c, dragger, gui, i, image, len, onChange, onMouseMoved, options, ref, tr, tx, ty, update, bind = function (fn, me) {
		            return function () {
		                return fn.apply(me, arguments);
		            };
		        };
		    Kaleidoscope = function () {
		        Kaleidoscope.prototype.HALF_PI = Math.PI / 2;
		        Kaleidoscope.prototype.TWO_PI = Math.PI * 2;
		        function Kaleidoscope(options1) {
		            var key, ref, ref1, val;
		            this.options = options1 != null ? options1 : {};
		            this.defaults = {
		                offsetRotation: 0,
		                offsetScale: 1,
		                offsetX: 0,
		                offsetY: 0,
		                radius: radio2,
		                slices: 12,
		                zoom: 1
		            };
		            ref = this.defaults;
		            for (key in ref) {
		                if (window.CP.shouldStopExecution(1)) {
		                    break;
		                }
		                val = ref[key];
		                this[key] = val;
		            }
		            window.CP.exitedLoop(1);
		            ref1 = this.options;
		            for (key in ref1) {
		                if (window.CP.shouldStopExecution(2)) {
		                    break;
		                }
		                val = ref1[key];
		                this[key] = val;
		            }
		            window.CP.exitedLoop(2);
		            if (this.domElement == null) {
		                this.domElement = document.createElement('canvas');
		            }
		            if (this.context == null) {
		                this.context = this.domElement.getContext('2d');
		            }
		            if (this.image == null) {
		                this.image = document.createElement('img');
		            }
		        }
		        Kaleidoscope.prototype.draw = function () {
		            var cx, i, index, ref, results, scale, step;
		            this.domElement.width = this.domElement.height = this.radius * 2;
		            this.context.fillStyle = this.context.createPattern(this.image, 'repeat');
		            scale = this.zoom * (this.radius / Math.min(this.image.width, this.image.height));
		            step = this.TWO_PI / this.slices;
		            cx = this.image.width / 2;
		            results = [];
		            for (index = i = 0, ref = this.slices; 0 <= ref ? i <= ref : i >= ref; index = 0 <= ref ? ++i : --i) {
		                if (window.CP.shouldStopExecution(3)) {
		                    break;
		                }
		                this.context.save();
		                this.context.translate(this.radius, this.radius);
		                this.context.rotate(index * step);
		                this.context.beginPath();
		                this.context.moveTo(-0.5, -0.5);
		                this.context.arc(0, 0, this.radius, step * -0.51, step * 0.51);
		                this.context.lineTo(0.5, 0.5);
		                this.context.closePath();
		                this.context.rotate(this.HALF_PI);
		                this.context.scale(scale, scale);
		                this.context.scale([
		                    -1,
		                    1
		                ][index % 2], 1);
		                this.context.translate(this.offsetX - cx, this.offsetY);
		                this.context.rotate(this.offsetRotation);
		                this.context.scale(this.offsetScale, this.offsetScale);
		                this.context.fill();
		                results.push(this.context.restore());
		            }
		            window.CP.exitedLoop(3);
		            return results;
		        };
		        return Kaleidoscope;
		    }();
		    // image = new Image();
    // image.onload = function (_this) {
    //     return function () {
    //         return kaleidoscope.draw();
    //     };
    // }(this);
    // image.src = 'file/skycouch.png';
    // kaleidoscope = new Kaleidoscope({
    //     image: image,
    //     slices: 20
    // });
    // kaleidoscope.domElement.style.position = 'absolute';
    // kaleidoscope.domElement.style.marginLeft = -kaleidoscope.radius + 'px';
    // kaleidoscope.domElement.style.marginTop = -kaleidoscope.radius + 'px';
    // kaleidoscope.domElement.style.left = '50%';
    // kaleidoscope.domElement.style.top = '50%';
    // kaleidoscope.domElement.style.zIndex = 100;
}.call(this));



		return {
			width:width,
			height:height,
			radio:radio2,
			bl:bl,
			kale:Kaleidoscope
		}

	// 	$(".wa").css({
	// 		left:(width-$(".wa").width())/2+"px"
	// });

	// $(".num").css({
	// 	left:(width-$(".num").width())/2+"px"
	// });
})
